using System;using System.Collections.Generic;using System.Web;using System.Web.UI;using System.Web.UI.WebControls;using System.Web.UI.HtmlControls;using System.Configuration;using System.Data.SqlClient;using System.Data;public  class clsTime_Sheet_Master : System.Web.UI.Page{	string connectionstring;	public clsTime_Sheet_Master()	{		try		{			 connectionstring=Convert.ToString(ConfigurationManager.AppSettings["connectionstring"]);		}		catch(Exception err)		{			 //tdMessage.innerHtml=		}	}	public void BindGridView(string strQuery, GridView GridObject)	{		GridObject.DataSource = ReturnDataTable(strQuery);		GridObject.DataBind();	}	public void WarningMessage(string strMessage,HtmlTableCell objCell)	{		objCell.InnerHtml = "<span class='warningstyle'>"+ strMessage + "</span>";	}	public void SuccessMessage(string strMessage,HtmlTableCell objCell)	{		objCell.InnerHtml ="<span class='msgstyle'>"+ strMessage + "</span>";	}	public void BindDropDownList(string strQuery, DropDownList DropDownObject)	{		DropDownObject.DataSource = ReturnDataTable(strQuery);		DropDownObject.DataBind();	}    public void BindDropDownList2(string strQuery, DropDownList DropDownObject)    {        DropDownObject.DataSource = ReturnDataTable(strQuery);        DropDownObject.DataBind();    }    public void BindDataSet(string strQuery, DataList DataListObject)    {        DataListObject.DataSource = ReturnDataTable(strQuery);        DataListObject.DataBind();    }	public void Sql_ExecuteNoNQuery(string strQuery)	{		using (SqlConnection con = new SqlConnection(connectionstring))		{			con.Open();			using (SqlCommand cmd = new SqlCommand(strQuery, con))			{				cmd.ExecuteNonQuery();			}		}	}    public DataTable ReturnDataTable(string strQuery)    {        DataTable objTable = new DataTable();        DataSet objDataSet = new DataSet();        using (SqlConnection con = new SqlConnection(connectionstring))        {            con.Open();            using (SqlCommand cmd = new SqlCommand(strQuery, con))            {                using (SqlDataAdapter adaper = new SqlDataAdapter())                {                    adaper.SelectCommand = cmd;                    adaper.Fill(objDataSet);                    objTable = objDataSet.Tables[0];                }            }        }        return objTable;    }	 public object ReturnValue(string strValue,string strDataType)	 {		 object objReturn = strValue;		 if (Convert.ToString(strValue)=="")		 {			 objReturn=DBNull.Value;		 }		switch (strDataType) 		{			    case "INT":				        objReturn = Convert.ToInt32(strValue);				 break;			  case "TINYINT":				objReturn = Convert.ToInt16(strValue);				break;			case "SMALLINT":				objReturn = Convert.ToInt32(strValue);				break;			case "BIGINT":				     objReturn = Convert.ToInt64(strValue);				     break;			case "VARCHAR":			case "CHAR":				     objReturn = Convert.ToString(strValue);				         break;			case "NVARCHAR":			case "NCHAR":				         objReturn = Convert.ToString(strValue);				         break;			case "DECIMAL":			case "NUMERIC":				         objReturn = Convert.ToDecimal(strValue);				         break;			case "FLOAT":			case "REAL":			case "MONEY":			case "SMALLMONEY":				         objReturn = Convert.ToDouble(strValue);				         break;			case "SMALLDATETIME":			case "DATETIME":			case "DATE":			case "TIME":				         Convert.ToDateTime(strValue);				    break;			case "BIT":				         Convert.ToBoolean(strValue);				    break;			}		 return objReturn;	}    public DateTime GetDate2()    {        DateTime T =DateTime.UtcNow.AddHours(5).AddMinutes(30);        //return T;        string TT = T.ToString("yyyy-MM-dd HH:mm:ss");        return Convert.ToDateTime(TT);    }    public void GridTopPagerPosition(GridView Grid)	{		if (Grid.PageCount> 1)		{			TextBox objText = ((TextBox)(Grid.TopPagerRow.FindControl("CurrentPageIndex")));			if (objText is TextBox)			{				objText.Text = Convert.ToString(Grid.PageIndex + 1) + "/" + Convert.ToString(Grid.PageCount);			}		}	}       public string FnGetDate(DateTime dateValue)    {        string[] aryMonth = new string[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };        return dateValue.Day + "-" + aryMonth[dateValue.Month - 1] + "-" + dateValue.Year;    }	public void GridBottomPagerPosition(GridView Grid)	{		if (Grid.PageCount> 1)		{			TextBox objText = ((TextBox)(Grid.BottomPagerRow.FindControl("CurrentPageIndex")));			if (objText is TextBox)			{				objText.Text = Convert.ToString(Grid.PageIndex + 1) + "/" + Convert.ToString(Grid.PageCount);			}		}	}    public string FnFormatCondition(string strValue, string strField, string strExists, string Session_Name)    {        string strReturn = strExists;        if (strValue != "")        {            strReturn += (strExists != "") ? " AND " + strField + "='" + strValue + "'" : " Where " + strField + "='" + strValue + "'";        }        Session[Session_Name] = strValue;        return strReturn;    }    public void BindYearDropDownList(DropDownList objDropDownList, int StartYear, int EndYear)    {        for (int intYearLoop = StartYear; intYearLoop <= EndYear + 5; intYearLoop++)        {            ListItem objList = new ListItem();            objList.Value = Convert.ToString(intYearLoop);            objList.Text = objList.Value;            objDropDownList.Items.Add(objList);        }        objDropDownList.SelectedValue = Convert.ToString(DateTime.UtcNow.AddHours(5).AddMinutes(30).Year);    }    public void BindMonthDropDownList(DropDownList objDropDownList)    {        string[] aryMonthList = new string[] { "ALL", "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" };        for (int intYearLoop = 0; intYearLoop < aryMonthList.Length; intYearLoop++)        {            ListItem objList = new ListItem();            objList.Value = Convert.ToString(intYearLoop);            objList.Text = aryMonthList[intYearLoop];            objDropDownList.Items.Add(objList);        }        objDropDownList.SelectedValue = Convert.ToString(DateTime.UtcNow.AddHours(5).AddMinutes(30).Month);    }    public void Login_DedailsUpdate(string User_Log_Id, string User_Id, string Latitude,string Longitude,string Location)    {        using (SqlConnection con = new SqlConnection(connectionstring))        {            con.Open();            using (SqlCommand cmd = new SqlCommand("SP_User_Log_Master", con))            {                cmd.CommandType = CommandType.StoredProcedure;                cmd.Parameters.AddWithValue("@User_Log_Id", ReturnValue(Convert.ToString(User_Log_Id),"int"));                cmd.Parameters.AddWithValue("@User_Id", ReturnValue(Convert.ToString(User_Id),"int"));                cmd.Parameters.AddWithValue("@SignInTime", ReturnValue(Convert.ToString(DateTime.UtcNow.AddHours(5).AddMinutes(30)),"datetime"));                cmd.Parameters.AddWithValue("@Latitude", ReturnValue(Convert.ToString(Latitude), "varchar"));                cmd.Parameters.AddWithValue("@Longitude", ReturnValue(Convert.ToString(Longitude), "varchar"));                cmd.Parameters.AddWithValue("@Location", ReturnValue(Convert.ToString(Location), "varchar"));                SqlDataReader objReader = cmd.ExecuteReader();            }        }    }}